<?xml version="1.0" encoding="UTF-8"?>
<Tokens version="1.0">
	<File path="Classes/JSQSystemSoundPlayer.html">
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/cl/JSQSystemSoundPlayer</TokenIdentifier>
			<Abstract type="html">The JSQSystemSoundPlayer class enables you to play sound effects, alert sounds, or other short sounds.
It lazily loads and caches all SystemSoundID objects and purges them upon
receiving the UIApplicationDidReceiveMemoryWarningNotification notification.</Abstract>
			<DeclaredIn>JSQSystemSoundPlayer.h</DeclaredIn>
            
			
			<NodeRef refid="1"/>
		</Token>
		
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/JSQSystemSoundPlayer/setOn:</TokenIdentifier>
			<Abstract type="html">Returns whether or not the sound player is on.
That is, whether the sound player is enabled or disabled.
If disabled, it will not play sounds.</Abstract>
			<DeclaredIn>JSQSystemSoundPlayer.h</DeclaredIn>
			
			<Declaration>@property (assign, nonatomic, readonly) BOOL on</Declaration>
			
			
			<Anchor>//api/name/on</Anchor>
            <NodeRef refid="1"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/JSQSystemSoundPlayer/on</TokenIdentifier>
			<Abstract type="html">Returns whether or not the sound player is on.
That is, whether the sound player is enabled or disabled.
If disabled, it will not play sounds.</Abstract>
			<DeclaredIn>JSQSystemSoundPlayer.h</DeclaredIn>
			
			<Declaration>@property (assign, nonatomic, readonly) BOOL on</Declaration>
			
			
			<Anchor>//api/name/on</Anchor>
            <NodeRef refid="1"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instp/JSQSystemSoundPlayer/on</TokenIdentifier>
			<Abstract type="html">Returns whether or not the sound player is on.
That is, whether the sound player is enabled or disabled.
If disabled, it will not play sounds.</Abstract>
			<DeclaredIn>JSQSystemSoundPlayer.h</DeclaredIn>
			
			<Declaration>@property (assign, nonatomic, readonly) BOOL on</Declaration>
			
			
			<Anchor>//api/name/on</Anchor>
            <NodeRef refid="1"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/JSQSystemSoundPlayer/setBundle:</TokenIdentifier>
			<Abstract type="html">The bundle in which the sound player uses to search for sound file resources. You may change this property as needed.
The default value is the main bundle. This value must not be nil.</Abstract>
			<DeclaredIn>JSQSystemSoundPlayer.h</DeclaredIn>
			
			<Declaration>@property (strong, nonatomic) NSBundle *bundle</Declaration>
			
			
			<Anchor>//api/name/bundle</Anchor>
            <NodeRef refid="1"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/JSQSystemSoundPlayer/bundle</TokenIdentifier>
			<Abstract type="html">The bundle in which the sound player uses to search for sound file resources. You may change this property as needed.
The default value is the main bundle. This value must not be nil.</Abstract>
			<DeclaredIn>JSQSystemSoundPlayer.h</DeclaredIn>
			
			<Declaration>@property (strong, nonatomic) NSBundle *bundle</Declaration>
			
			
			<Anchor>//api/name/bundle</Anchor>
            <NodeRef refid="1"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instp/JSQSystemSoundPlayer/bundle</TokenIdentifier>
			<Abstract type="html">The bundle in which the sound player uses to search for sound file resources. You may change this property as needed.
The default value is the main bundle. This value must not be nil.</Abstract>
			<DeclaredIn>JSQSystemSoundPlayer.h</DeclaredIn>
			
			<Declaration>@property (strong, nonatomic) NSBundle *bundle</Declaration>
			
			
			<Anchor>//api/name/bundle</Anchor>
            <NodeRef refid="1"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/clm/JSQSystemSoundPlayer/sharedPlayer</TokenIdentifier>
			<Abstract type="html">Returns the shared JSQSystemSoundPlayer object. This method always returns the same sound system player object.</Abstract>
			<DeclaredIn>JSQSystemSoundPlayer.h</DeclaredIn>
			
			<Declaration>+ (JSQSystemSoundPlayer *)sharedPlayer</Declaration>
			
			<ReturnValue><Abstract type="html">An initialized JSQSystemSoundPlayer object if successful, nil otherwise.</Abstract></ReturnValue>
			<Anchor>//api/name/sharedPlayer</Anchor>
            <NodeRef refid="1"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/JSQSystemSoundPlayer/toggleSoundPlayerOn:</TokenIdentifier>
			<Abstract type="html">Toggles the sound player on or off by setting the kJSQSystemSoundPlayerUserDefaultsKey key in NSUserDefaults to the given value.
This will enable or disable the playing of sounds via JSQSystemSoundPlayer globally.
This setting is persisted across application launches.</Abstract>
			<DeclaredIn>JSQSystemSoundPlayer.h</DeclaredIn>
			
			<Declaration>- (void)toggleSoundPlayerOn:(BOOL)on</Declaration>
			<Parameters>
				<Parameter>
					<Name>on</Name>
					<Abstract type="html">A boolean indicating whether or not to enable or disable the sound player settings.
Pass YES to turn sounds on, and NO to turn sounds off.</Abstract>
				</Parameter>
			</Parameters>
			
			<Anchor>//api/name/toggleSoundPlayerOn:</Anchor>
            <NodeRef refid="1"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/JSQSystemSoundPlayer/playSoundWithFilename:fileExtension:completion:</TokenIdentifier>
			<Abstract type="html">Plays a system sound object corresponding to an audio file with the given filename and extension,
and excutes completionBlock when the sound has stopped playing.
The system sound player will lazily initialize and load the file before playing it, and then cache its corresponding SystemSoundID.
If this file has previously been played, it will be loaded from cache and played immediately.</Abstract>
			<DeclaredIn>JSQSystemSoundPlayer.h</DeclaredIn>
			
			<Declaration>- (void)playSoundWithFilename:(NSString *)filename fileExtension:(NSString *)fileExtension completion:(nullable JSQSystemSoundPlayerCompletionBlock)completionBlock</Declaration>
			<Parameters>
				<Parameter>
					<Name>filename</Name>
					<Abstract type="html">A string containing the base name of the audio file to play.</Abstract>
				</Parameter><Parameter>
					<Name>fileExtension</Name>
					<Abstract type="html">A string containing the extension of the audio file to play.
This parameter must be one of kJSQSystemSoundTypeCAF, kJSQSystemSoundTypeAIF, kJSQSystemSoundTypeAIFF, or kJSQSystemSoundTypeWAV.</Abstract>
				</Parameter><Parameter>
					<Name>completionBlock</Name>
					<Abstract type="html">A block called after the sound has stopped playing.
This block is retained by JSQSystemSoundPlayer, temporarily cached, and released after its execution. This value may be nil.</Abstract>
				</Parameter>
			</Parameters>
			
			<Anchor>//api/name/playSoundWithFilename:fileExtension:completion:</Anchor>
            <NodeRef refid="1"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/JSQSystemSoundPlayer/playAlertSoundWithFilename:fileExtension:completion:</TokenIdentifier>
			<Abstract type="html">Plays a system sound object as an alert corresponding to an audio file with the given filename and extension,
and and excutes completionBlock when the sound has stopped playing.
The system sound player will lazily initialize and load the file before playing it, and then cache its corresponding SystemSoundID.
If this file has previously been played, it will be loaded from cache and played immediately.</Abstract>
			<DeclaredIn>JSQSystemSoundPlayer.h</DeclaredIn>
			
			<Declaration>- (void)playAlertSoundWithFilename:(NSString *)filename fileExtension:(NSString *)fileExtension completion:(nullable JSQSystemSoundPlayerCompletionBlock)completionBlock</Declaration>
			<Parameters>
				<Parameter>
					<Name>filename</Name>
					<Abstract type="html">A string containing the base name of the audio file to play.</Abstract>
				</Parameter><Parameter>
					<Name>fileExtension</Name>
					<Abstract type="html">A string containing the extension of the audio file to play.
This parameter must be one of kJSQSystemSoundTypeCAF, kJSQSystemSoundTypeAIF, kJSQSystemSoundTypeAIFF, or kJSQSystemSoundTypeWAV.</Abstract>
				</Parameter><Parameter>
					<Name>completionBlock</Name>
					<Abstract type="html">A block called after the sound has stopped playing.
This block is retained by JSQSystemSoundPlayer, temporarily cached, and released after its execution. This value may be nil.</Abstract>
				</Parameter>
			</Parameters>
			
			<Anchor>//api/name/playAlertSoundWithFilename:fileExtension:completion:</Anchor>
            <NodeRef refid="1"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/JSQSystemSoundPlayer/playVibrateSound</TokenIdentifier>
			<Abstract type="html">Available on iOS only. On some iOS devices, you can call this method to invoke vibration.
If this functionaly is not available, then calling this method does nothing.</Abstract>
			<DeclaredIn>JSQSystemSoundPlayer.h</DeclaredIn>
			
			<Declaration>- (void)playVibrateSound</Declaration>
			
			
			<Anchor>//api/name/playVibrateSound</Anchor>
            <NodeRef refid="1"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/JSQSystemSoundPlayer/stopAllSounds</TokenIdentifier>
			<Abstract type="html">Stops playing all sounds immediately.</Abstract>
			<DeclaredIn>JSQSystemSoundPlayer.h</DeclaredIn>
			
			<Declaration>- (void)stopAllSounds</Declaration>
			
			
			<Anchor>//api/name/stopAllSounds</Anchor>
            <NodeRef refid="1"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/JSQSystemSoundPlayer/stopSoundWithFilename:</TokenIdentifier>
			<Abstract type="html">Stops playing the sound with the given filename immediately.</Abstract>
			<DeclaredIn>JSQSystemSoundPlayer.h</DeclaredIn>
			
			<Declaration>- (void)stopSoundWithFilename:(NSString *)filename</Declaration>
			<Parameters>
				<Parameter>
					<Name>filename</Name>
					<Abstract type="html">The filename of the sound to stop playing.</Abstract>
				</Parameter>
			</Parameters>
			
			<Anchor>//api/name/stopSoundWithFilename:</Anchor>
            <NodeRef refid="1"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/JSQSystemSoundPlayer/preloadSoundWithFilename:fileExtension:</TokenIdentifier>
			<Abstract type="html">Preloads a system sound object corresponding to an audio file with the given filename and extension.
The system sound player will initialize, load, and cache the corresponding SystemSoundID.</Abstract>
			<DeclaredIn>JSQSystemSoundPlayer.h</DeclaredIn>
			
			<Declaration>- (void)preloadSoundWithFilename:(NSString *)filename fileExtension:(NSString *)fileExtension</Declaration>
			<Parameters>
				<Parameter>
					<Name>filename</Name>
					<Abstract type="html">A string containing the base name of the audio file to play.</Abstract>
				</Parameter><Parameter>
					<Name>fileExtension</Name>
					<Abstract type="html">A string containing the extension of the audio file to play.
This parameter must be one of kJSQSystemSoundTypeCAF, kJSQSystemSoundTypeAIF, kJSQSystemSoundTypeAIFF, or kJSQSystemSoundTypeWAV.</Abstract>
				</Parameter>
			</Parameters>
			
			<Anchor>//api/name/preloadSoundWithFilename:fileExtension:</Anchor>
            <NodeRef refid="1"/>
		</Token>
		
        
	</File>
</Tokens>